{"version":3,"sources":["Input.js","List.js","TodoList.js","index.js"],"names":["Input","value","this","props","inpValue","type","onChange","handleChange","onClick","addTodo","React","Component","List","renderTodos","TodoList","e","setState","target","state","todos","title","done","alert","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","key","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","htmlFor","ReactDom","render","document","getElementById"],"mappings":"6KAiBeA,E,uKAbP,OACI,6BACI,2BACAC,MAAOC,KAAKC,MAAMC,SAClBC,KAAK,OACLC,SAAYJ,KAAKC,MAAMI,eAEvB,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GATIC,IAAMC,WCiBXC,E,uKAfP,OACI,6BACI,wDACA,4BACIV,KAAKC,MAAMU,aAAY,IAEvC,wDACA,4BACgBX,KAAKC,MAAMU,aAAY,S,GAVxBH,IAAMC,WCwFVG,E,kDAtFX,aAAc,IAAD,8BACT,gBAOJP,aAAe,SAACQ,GACZ,EAAKC,SAAS,CAACZ,SAASW,EAAEE,OAAOhB,SATxB,EA6BbQ,QAAQ,WACqB,KAAtB,EAAKS,MAAMd,UAIV,EAAKY,SAAS,CACVG,MAAM,CACF,CAACC,MAAM,EAAKF,MAAMd,SAASiB,MAAK,IAD/B,mBAEE,EAAKH,MAAMC,UAGtB,EAAKH,SAAS,CAACZ,SAAS,MATxBkB,MAAM,yCA/BD,EA6CbC,QAAQ,SAACC,GACL,EAAKR,SAAS,CACVG,MAAM,EAAKD,MAAMC,MAAMM,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,QA/C9C,EAkDhBI,OAAS,SAACD,GACT,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKd,MAAMC,QACpDU,EAASF,GAAON,MAAQQ,EAASF,GAAON,KACxC,EAAKL,SAAS,CACbG,MAAMU,KAtDQ,EA2DhBhB,YAAc,SAACQ,GACd,OAAO,EAAKH,MAAMC,MAAMc,KAAI,SAACC,EAAKV,GACjC,GAAGH,GAAMa,EAAKb,KACb,OAAO,wBAAIc,IAAKX,GACf,2BAAOhB,QAAS,kBAAI,EAAKoB,OAAOJ,IAAMY,QAASf,EAAMhB,KAAK,aAC3C,0BAAMgC,wBAAyB,CAACC,OAAOJ,EAAKd,SAC3D,4BAAQZ,QAAS,kBAAI,EAAKe,QAAQC,KAAlC,qBA/DG,EAAKN,MAAQ,CACTd,SAAS,GACTe,MAAM,IAJD,E,gEAaf,IAAIA,EAAQoB,aAAaC,QAAQ,SAC9BrB,GACFjB,KAAKc,SAAS,CACbG,MAAMW,KAAKC,MAAMZ,O,2CAOboB,aAAaE,QACT,QACAX,KAAKE,UAAU9B,KAAKgB,MAAMC,U,+BA6CxB,IAAD,EACmBjB,KAAKgB,MAAjBd,GADP,EACCe,MADD,EACOf,UACZ,OACI,6BACI,2BAAOsC,QAAQ,OAAf,YACA,kBAAC,EAAD,CAAOtC,SAAUA,EACbG,aAAcL,KAAKK,aACnBE,QAASP,KAAKO,UAClB,kBAAC,EAAD,CAAMI,YAAeX,KAAKW,mB,GA/EnBH,IAAMC,WCC7BgC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.65744a99.chunk.js","sourcesContent":["import React from 'react'\r\n// 输入\r\nclass Input extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                value={this.props.inpValue}\r\n                type=\"text\"\r\n                onChange = {this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n\r\n","import React from 'react'\r\n// 列表\r\nclass List extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>正在进行</h2>\r\n                <ul>\r\n                   {this.props.renderTodos(false)}\r\n                </ul>\r\n\t\t\t\t<h2>已经完成</h2>\r\n\t\t\t\t<ul>\r\n                   {this.props.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import React from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\nclass TodoList extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue:'',\r\n            todos:[]\r\n        }\r\n    }\r\n    // 改变当前状态值，当前事件对象的值，输入触发\r\n    handleChange = (e) =>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    // 挂载后立即调用，读取本地数据\r\n    componentDidMount(){\r\n\t\tlet todos = localStorage.getItem('todos');\r\n\t\tif(todos){\r\n\t\t\tthis.setState({\r\n\t\t\t\ttodos:JSON.parse(todos)\r\n\t\t\t})\r\n\t\t}\r\n    }\r\n\r\n    // 数据更新后更新本地存储\r\n\tcomponentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    // 给状态对象的数组添加元素，点击按钮触发\r\n    addTodo=()=>{\r\n        if(this.state.inpValue===''){\r\n            alert('输入不能为空');\r\n            return;\r\n        }else{\r\n            this.setState({\r\n                todos:[\r\n                    {title:this.state.inpValue,done:false},\r\n                    ...this.state.todos\r\n                ] \r\n            })\r\n            this.setState({inpValue:''});\r\n        }\r\n    }\r\n\r\n    // 删除元素\r\n    delTodo=(idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n\t\t})\r\n    }\r\n\ttoggle = (index) =>{\r\n\t\tlet newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n\t\tnewTodos[index].done = !newTodos[index].done;\r\n\t\tthis.setState({\r\n\t\t\ttodos:newTodos\r\n\t\t})\r\n    }\r\n\r\n    // 列出数组元素\r\n\trenderTodos = (done) =>{\r\n\t\treturn this.state.todos.map((todo,idx)=>{\r\n\t\t\tif(done==todo.done){\r\n\t\t\t\treturn <li key={idx}>\r\n\t\t\t\t\t<input onClick={()=>this.toggle(idx)} checked={done} type='checkbox'/>\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n\t\t\t\t\t<button onClick={()=>this.delTodo(idx)}>删除</button>\r\n\t\t\t\t</li>\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n    render() {\r\n        const{todos,inpValue} = this.state;\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <Input inpValue={inpValue}\r\n                    handleChange={this.handleChange}\r\n                    addTodo={this.addTodo}/>\r\n                <List renderTodos = {this.renderTodos}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TodoList\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport TodoList from './TodoList';\r\n\r\nReactDom.render(\r\n    <TodoList/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}